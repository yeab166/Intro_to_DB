-- Use the Database
USE alx_book_store;

-- Drop existing tables to avoid conflicts
DROP TABLE IF EXISTS ORDER_DETAILS;
DROP TABLE IF EXISTS ORDERS;
DROP TABLE IF EXISTS BOOKS;
DROP TABLE IF EXISTS AUTHORS;
DROP TABLE IF EXISTS CUSTOMERS;

-- Create Table: AUTHORS
CREATE TABLE AUTHORS (
    author_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    author_name VARCHAR(215) NOT NULL
) ENGINE=INNODB;

-- Create Table: BOOKS
CREATE TABLE BOOKS (
    book_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(130) NOT NULL,
    author_id INT NOT NULL,
    price DOUBLE,
    publication_date DATE,
    CONSTRAINT FK_BOOKS_AUTHORS
        FOREIGN KEY (author_id)
        REFERENCES AUTHORS(author_id)
        ON DELETE RESTRICT
        ON UPDATE CASCADE
) ENGINE=INNODB;

-- Create Table: CUSTOMERS
CREATE TABLE CUSTOMERS (
    customer_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    customer_name VARCHAR(215) NOT NULL,
    email VARCHAR(215) UNIQUE,
    address TEXT
) ENGINE=INNODB;

-- Create Table: ORDERS
CREATE TABLE ORDERS (
    order_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date DATE,
    CONSTRAINT FK_ORDERS_CUSTOMERS
        FOREIGN KEY (customer_id)
        REFERENCES CUSTOMERS(customer_id)
        ON DELETE CASCADE
        ON UPDATE CASCADE
) ENGINE=INNODB;

-- Create Table: ORDER_DETAILS
CREATE TABLE ORDER_DETAILS (
    orderdetailid INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    order_id INT NOT NULL,
    book_id INT NOT NULL,
    quantity INT NOT NULL,
    CONSTRAINT FK_ORDERDETAILS_ORDERS
        FOREIGN KEY (order_id)
        REFERENCES ORDERS(order_id)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    CONSTRAINT FK_ORDERDETAILS_BOOKS
        FOREIGN KEY (book_id)
        REFERENCES BOOKS(book_id)
        ON DELETE RESTRICT
        ON UPDATE CASCADE
) ENGINE=INNODB;
