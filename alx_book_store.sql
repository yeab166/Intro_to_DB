-- Create Database
CREATE DATABASE IF NOT EXISTS alx_book_store;
USE alx_book_store;

-- Ensure clean state (will DROP if they already exist)
DROP TABLE IF EXISTS ORDER_DETAILS;
DROP TABLE IF EXISTS ORDERS;
DROP TABLE IF EXISTS BOOKS;
DROP TABLE IF EXISTS AUTHORS;
DROP TABLE IF EXISTS CUSTOMERS;

-- Create Table: AUTHORS
CREATE TABLE AUTHORS (
    author_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    author_name VARCHAR(215) NOT NULL
) ENGINE=InnoDB;

-- Create Table: BOOKS
CREATE TABLE BOOKS (
    book_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(130) NOT NULL,
    author_id INT NOT NULL,
    price DOUBLE,
    publication_date DATE,
    CONSTRAINT fk_books_author
      FOREIGN KEY (author_id) REFERENCES AUTHORS(author_id)
      ON DELETE RESTRICT ON UPDATE CASCADE
) ENGINE=InnoDB;

-- Create Table: CUSTOMERS
CREATE TABLE CUSTOMERS (
    customer_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    customer_name VARCHAR(215) NOT NULL,
    email VARCHAR(215) UNIQUE,
    address TEXT
) ENGINE=InnoDB;

-- Create Table: ORDERS
CREATE TABLE ORDERS (
    order_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date DATE,
    CONSTRAINT fk_orders_customer
      FOREIGN KEY (customer_id) REFERENCES CUSTOMERS(customer_id)
      ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

-- Create Table: ORDER_DETAILS
CREATE TABLE ORDER_DETAILS (
    orderdetailid INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    order_id INT NOT NULL,
    book_id INT NOT NULL,
    quantity INT NOT NULL,
    CONSTRAINT fk_orderdetails_order
      FOREIGN KEY (order_id) REFERENCES ORDERS(order_id)
      ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT fk_orderdetails_book
      FOREIGN KEY (book_id) REFERENCES BOOKS(book_id)
      ON DELETE RESTRICT ON UPDATE CASCADE
) ENGINE=InnoDB;
